#!/usr/bin/env bash

set -euo pipefail
shopt -s nullglob

readonly BIN=${HOME}/.local/bin

INFO_JSON=$(mise ls --json python | jq -r '.[0]')
readonly INFO_JSON

PIP=$(mise which pip)
readonly PIP

UV=$(mise which uv)
readonly UV

UV_DIR=$("$UV" tool dir)
readonly UV_DIR

# current python semver
VERSION=$(jq -r '.version' <<< "$INFO_JSON")
readonly VERSION

readonly MAJ_MIN=${VERSION%.*}

# current python lib dir
readonly CURRENT_LIB=${HOME}/.local/lib/python${MAJ_MIN}

# list of currently-installed packages
declare -a PIP_PACKAGES=()
mapfile -t PIP_PACKAGES < <("$PIP" list --user --format json | jq '.[].name' -r)
readonly PIP_PACKAGES

if (( ${#PIP_PACKAGES[@]} > 0 )); then
    echo "removing old pip packages: ${PIP_PACKAGES[*]}"
    "$PIP" uninstall --yes "${PIP_PACKAGES[@]}"
fi


for bin in "$BIN"/*; do
    # not a file
    if [[ ! -f $bin ]]; then
        continue
    fi

    # not a text file / no shebang present
    if [[ $(head -c 2 "$bin") != "#!" ]]; then
        continue
    fi

    shebang=$(head -n 1 "$bin")
    shebang=${shebang#'#!'}

    case $shebang in
        # probably one of my own scripts
        /usr/bin/env\ *)
            continue;;

        # correctly installed/managed by uv
        "$UV_DIR"/*/bin/python*)
            continue;;

        # very old
        /usr/bin/python*)
            ;;

        # old and of unknown origin
        /opt/python/*)
            ;;

        # installed via pip w/ mise
        */mise/installs/python/*)
            ;;

        *python*)
            echo "UNKNOWN python: $shebang in $bin"
            continue;;

        *)
            continue;;
    esac

    base=${bin##*/}
    echo "removing binary $base (using #!$shebang)"
    rm -fv "$bin"
done

for dir in "$HOME"/.local/lib/python*; do
    if [[ $dir == "$CURRENT_LIB" ]]; then
        continue
    fi

    echo "removing old lib dir ($dir)"
    rm -rf "${dir:?}"
done
