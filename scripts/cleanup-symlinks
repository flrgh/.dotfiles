#!/usr/bin/env bash

# delete orphaned symlinks

readonly REPO_ROOT=${REPO_ROOT:?REPO_ROOT undefined}
readonly INSTALL_PATH=${INSTALL_PATH:?INSTALL_PATH undefined}
readonly FILES_D=${REPO_ROOT}/home

OLD=(
    .bash
    .local/.bash
    .local/bash
    .local/man
)
for old in "${OLD[@]}"; do
    path=$INSTALL_PATH/$old
    if [[ -e $path ]]; then
        echo "removing legacy path ($path)"
        rm -rf "${path:?}"
    fi
done

if ! type -f -t fd &>/dev/null; then
    echo "fd not installed, exiting"
    exit 0
fi

shopt -s dotglob
shopt -s nullglob

ARGS=(
    .
    --type symlink
    --hidden
    --no-ignore
    --absolute-path
    --one-file-system
    --full-path
    --min-depth 1
    --exclude "**/logs"
    --exclude "**/node_modules"
    --exclude "**/.git"
    --exclude "**/.cache"
    --exclude "**/systemtap"
)

PATHS=()
SEARCH_PATH_ARGS=()

for sub in "$FILES_D"/*; do
    if [[ ! -d "$sub" ]]; then
        continue
    fi

    path=${sub/$FILES_D/$INSTALL_PATH}
    PATHS+=("$path")
    SEARCH_PATH_ARGS+=(--search-path "$path")
done

IGNORE_ARGS=()
readonly IGNORE=(
    ".local/GoLand-*"
    ".local/lib/python*/site-packages"
    ".local/lib64/python*/site-packages"
    .cache
    .config/JetBrains
    .config/REAPER
    .config/chromium
    .config/google-chrome
    .config/libreoffice
    .config/nvm
    .config/pulse-sms
    .local/aws-cli
    .local/cargo
    .local/go
    .local/lib/luarocks
    .local/libexec/lua-language-server
    .local/rustup
    .local/share/.cpan
    .local/share/Trash
    .local/share/flatpak
    .local/share/lua/5.1
    .local/share/mise
    .local/share/virtualenv
    .local/state/nvim
    .local/var/log/lua-lsp
    Backups
    backup
    git
    lib/perl5
    opt/REAPER
)

for p in "${IGNORE[@]}"; do
    IGNORE_ARGS+=(--exclude "/$p")
done

EXEC=(
    --batch-size 100
    --exec-batch "$REPO_ROOT"/scripts/remove-dangling-symlinks "$REPO_ROOT"
)

# $HOME itself (no recurse)
fd "${ARGS[@]}" \
    "${IGNORE_ARGS[@]}" \
    --max-depth 1 \
    --search-path "$INSTALL_PATH" \
    "${EXEC[@]}"

IGNORE_ARGS=()
for p in "${IGNORE[@]}"; do
    for search in "${PATHS[@]}"; do
        search_base=${search##*/}
        if [[ ${p#"$search_base"/} != "$p" ]]; then
            IGNORE_ARGS+=(--exclude "**/${p#"$search_base"/}/**" )
        fi
    done
    #IGNORE_ARGS+=(--exclude "**/$p/**")
done

# $HOME sub-paths (with recurse)
fd "${ARGS[@]}" \
    "${IGNORE_ARGS[@]}" \
    "${PATHS[@]}" \
    "${EXEC[@]}"
