#!/usr/bin/env bash

set -eu

readonly INI="$HOME/.aws/credentials"
readonly NS=aws-iam

readonly RATE=2
LAST_CALLED=$(date +%s)

_lpass() {
    local now _sleep
    now=$(date +%s)
    if (( (LAST_CALLED + RATE) > now )); then
        _sleep="$(( (LAST_CALLED + RATE ) - now ))"
        echo "Sleeping for $_sleep" > /dev/stderr
        sleep "$_sleep"
    fi
    lpass "$@"
    LAST_CALLED=$(date +%s)
}

exists() {
    local -r key=$1
    lpass show --sync=now -q "$NS/$key" &> /dev/null
}

sections() {
    {
        ini-tool "$HOME/.aws/credentials" sections
        ini-tool "$HOME/.aws/config" sections
    } \
    | sed -e 's|profile ||' \
    | grep -vE '^(default|preview)$' \
    | sort -u
}

create() {
    local -r section=$1
    echo 'http://sn' \
    | _lpass add \
        --sync=now \
        --non-interactive \
        --url \
        "$NS/$section" \
    > /dev/null

    get_id "$section"
}

get_id() {
    local -r section=$1
    lpass show --sync=now --id "$NS/$section"
}

merge() {
    jq -s 'reduce .[] as $obj ({}; . + $obj)'
}

get_items() {
    local -r section=$1
    {
        ini-tool \
            --format json \
            "$INI" \
            items \
            "$section" \
        2>/dev/null \
        || true

        ini-tool \
            --format json \
            "$HOME/.aws/config" \
            items \
            "profile $section" \
        2>/dev/null \
        || true
    } | merge
}

update() {
    local -r id=${1:?id is required}
    local -r section=${2:?section is required}

    echo "Updating section $section with id $id"

    if [[ $id == 0 ]]; then
        echo WTF?
        return 1
    fi

    get_items "$section" \
    | tee /dev/stderr \
    | _lpass edit \
        --sync=now \
        --non-interactive \
        --notes \
        "$id"
}

for s in $(sections); do
    if [[ -n ${1:-} && $s != $1 ]]; then
        echo "Skipping $s"
        continue
    fi

    if [[ $s == default ]]; then
        echo "Skipping default"
        continue
    fi

    if exists "$s"; then
        echo "Updating $s in place"
        id=$(get_id "$s")
    else
        echo "Creating $s"
        id=$(create "$s")
    fi
    update "$id" "$s"
    sleep 3
done
