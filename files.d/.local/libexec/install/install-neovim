#!/usr/bin/env bash

set -euo pipefail

if pidof nvim &>/dev/null; then
    echo "oops, neovim can't be updated while it's already running."
    exit 1
fi


VERSION=${1:-latest}

readonly BASE_URL=https://api.github.com/repos/neovim/neovim

gh() {
    curl -f --silent \
        --header "Accept: application/vnd.github.v3+json" \
        --url "${BASE_URL}${1}" \
    | jq .
}

DOWNLOAD_URL=https://github.com/neovim/neovim/releases/download/${VERSION}/nvim-linux64.tar.gz

case "$VERSION" in
    latest)
        echo "Checking for the lastest release..."
        VERSION=$(gh /releases/latest | jq -r '.tag_name')
        DOWNLOAD_URL=${DOWNLOAD_URL/latest/$VERSION}
        ;;

    nightly)
        echo "Checking for the latest nightly release..."
        VERSION=$(gh /releases | jq -r 'map(select(.tag_name == "nightly")) | .[0].name')
        VERSION=${VERSION/NVIM /}
        ;;
esac


tmp=$(mktemp -d)
cd "$tmp" || { echo "failed to cd to temp dir ($tmp), exiting"; exit 1; }

cleanup() {
    cd
    if [[ -d $tmp ]]; then
        rm -r "$tmp"
    fi
}

FNAME=nvim-${VERSION}.tar.gz

trap cleanup ERR EXIT

echo "Downloading neovim $VERSION"
F=$(cache-get "$DOWNLOAD_URL" "$FNAME")


echo "Installing..."

tar xzf "$F"
cp -af nvim-linux64/bin/* "$HOME/.local/bin/"
cp -af nvim-linux64/lib/* "$HOME/.local/lib/"
cp -af nvim-linux64/share/* "$HOME/.local/share/"

echo "Done!"
