#!/usr/bin/env bash

set -euo pipefail

if pidof nvim &>/dev/null; then
    echo "oops, neovim can't be updated while it's already running."
    exit 1
fi


VERSION=${1:-latest}

readonly REPO=neovim/neovim

DOWNLOAD_URL=https://github.com/neovim/neovim/releases/download/${VERSION}/nvim-linux64.tar.gz
FNAME=nvim-${VERSION}.tar.gz

case "$VERSION" in
    latest)
        echo "Checking for the lastest release..."
        VERSION=$(gh-helper get-latest-release-tag "$REPO")
        DOWNLOAD_URL=${DOWNLOAD_URL/latest/$VERSION}
        FNAME=${FNAME/latest/$VERSION}
        ;;

    nightly)
        echo "Using the latest nightly release..."
        ;;
esac


tmp=$(mktemp -d)
cd "$tmp" || { echo "failed to cd to temp dir ($tmp), exiting"; exit 1; }

cleanup() {
    cd
    if [[ -d $tmp ]]; then
        rm -r "$tmp"
    fi
}


trap cleanup ERR EXIT

echo "DOWNLOAD_URL: $DOWNLOAD_URL"
echo "Downloading neovim $VERSION"
F=$(cache-get "$DOWNLOAD_URL" "$FNAME")


echo "Installing..."

tar xzf "$F"
cp -af nvim-linux64/bin/* "$HOME/.local/bin/"
cp -af nvim-linux64/lib/* "$HOME/.local/lib/"
cp -af nvim-linux64/share/* "$HOME/.local/share/"

echo "Done!"
