15d14
< if [[ $- =~ i ]]; then
25c24
<   command cat "${FZF_DEFAULT_OPTS_FILE-}" 2> /dev/null
---
>   #command cat "${FZF_DEFAULT_OPTS_FILE-}" 2> /dev/null
32c31
<   FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd) "$@" |
---
>   FZF_DEFAULT_OPTS_FILE='' fzf "$@" |
38,42d36
< __fzfcmd() {
<   [[ -n "${TMUX_PANE-}" ]] && { [[ "${FZF_TMUX:-0}" != 0 ]] || [[ -n "${FZF_TMUX_OPTS-}" ]]; } &&
<     echo "fzf-tmux ${FZF_TMUX_OPTS:--d${FZF_TMUX_HEIGHT:-40%}} -- " || echo "fzf"
< }
< 
54c48
<     FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd)
---
>     FZF_DEFAULT_OPTS_FILE='' fzf
58,76c52,82
< if command -v perl > /dev/null; then
<   __fzf_history__() {
<     local output script
<     script='BEGIN { getc; $/ = "\n\t"; $HISTCOUNT = $ENV{last_hist} + 1 } s/^[ *]//; s/\n/\n\t/gm; print $HISTCOUNT - $. . "\t$_" if !$seen{$_}++'
<     output=$(
<       set +o pipefail
<       builtin fc -lnr -2147483648 |
<         last_hist=$(HISTTIMEFORMAT='' builtin history 1) command perl -n -l0 -e "$script" |
<         FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort --wrap-sign '"$'\t'"↳ ' --highlight-line ${FZF_CTRL_R_OPTS-} +m --read0") \
<         FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd) --query "$READLINE_LINE"
<     ) || return
<     READLINE_LINE=$(command perl -pe 's/^\d*\t//' <<< "$output")
<     if [[ -z "$READLINE_POINT" ]]; then
<       echo "$READLINE_LINE"
<     else
<       READLINE_POINT=0x7fffffff
<     fi
<   }
< else # awk - fallback for POSIX systems
---
> __fzf_lua_history='
> local io = io
> local stdin = io.stdin
> local stdout = io.stdout
> local write = io.stdout.write
> 
> local fmt = string.format
> local byte = string.byte
> local sub = string.sub
> 
> local TAB = byte("\t")
> 
> local seen = {}
> local N = 0
> 
> for line in stdin:lines() do
>   if not line then
>     break
>   end
> 
>   if byte(line, 1) == TAB then
>     line = sub(line, 3)
>     N = N + 1
> 
>     if not seen[line] then
>       seen[line] = true
>       write(stdout, fmt("%d\t%s\0", BR - N, line))
>     end
>   end
> end
> '
78,84d83
<     local output script n x y z d
<     if [[ -z $__fzf_awk ]]; then
<       __fzf_awk=awk
<       # choose the faster mawk if: it's installed && build date >= 20230322 && version >= 1.3.4
<       IFS=' .' read n x y z d <<< $(command mawk -W version 2> /dev/null)
<       [[ $n == mawk ]] && (( d >= 20230302 && (x *1000 +y) *1000 +z >= 1003004 )) && __fzf_awk=mawk
<     fi
86,90c85,87
<     script='function P(b) { ++n; sub(/^[ *]/, "", b); if (!seen[b]++) { printf "%d\t%s%c", '$((BASH_REMATCH + 1))' - n, b, 0 } }
<     NR==1 { b = substr($0, 2); next }
<     /^\t/ { P(b); b = substr($0, 2); next }
<     { b = b RS $0 }
<     END { if (NR) P(b) }'
---
>     local -i n=$((BASH_REMATCH + 1))
> 
>     local output
93,96c90,99
<       builtin fc -lnr -2147483648 2> /dev/null |   # ( $'\t '<lines>$'\n' )* ; <lines> ::= [^\n]* ( $'\n'<lines> )*
<         command $__fzf_awk "$script"           |   # ( <counter>$'\t'<lines>$'\000' )*
<         FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort --wrap-sign '"$'\t'"↳ ' --highlight-line ${FZF_CTRL_R_OPTS-} +m --read0") \
<         FZF_DEFAULT_OPTS_FILE='' $(__fzfcmd) --query "$READLINE_LINE"
---
>       builtin fc -lnr -2147483648 2> /dev/null \
>         |   # ( $'\t '<lines>$'\n' )* ; <lines> ::= [^\n]* ( $'\n'<lines> )*
>             LUA_INIT='' \
>             command luajit \
>                 -e 'BR = assert(tonumber('$n'))' \
>                 -e "$__fzf_lua_history" \
>         |   # ( <counter>$'\t'<lines>$'\000' )*
>             FZF_DEFAULT_OPTS=$(__fzf_defaults "" "-n2..,.. --scheme=history --bind=ctrl-r:toggle-sort --wrap-sign '"$'\t'"↳ ' --highlight-line ${FZF_CTRL_R_OPTS-} +m --read0") \
>             FZF_DEFAULT_OPTS_FILE='' \
>             fzf --query "$READLINE_LINE"
105d107
< fi
114d115
< if (( BASH_VERSINFO[0] < 4 )); then
116,128d116
<   if [[ "${FZF_CTRL_T_COMMAND-x}" != "" ]]; then
<     bind -m emacs-standard '"\C-t": " \C-b\C-k \C-u`__fzf_select__`\e\C-e\er\C-a\C-y\C-h\C-e\e \C-y\ey\C-x\C-x\C-f"'
<     bind -m vi-command '"\C-t": "\C-z\C-t\C-z"'
<     bind -m vi-insert '"\C-t": "\C-z\C-t\C-z"'
<   fi
< 
<   # CTRL-R - Paste the selected command from history into the command line
<   bind -m emacs-standard '"\C-r": "\C-e \C-u\C-y\ey\C-u`__fzf_history__`\e\C-e\er"'
<   bind -m vi-command '"\C-r": "\C-z\C-r\C-z"'
<   bind -m vi-insert '"\C-r": "\C-z\C-r\C-z"'
< else
<   # CTRL-T - Paste the selected file path into the command line
<   if [[ "${FZF_CTRL_T_COMMAND-x}" != "" ]]; then
132d119
<   fi
138d124
< fi
147d132
< fi
